echo "# The-Wolbachians" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/JimenaS48/The-Wolbachians.git
git push -u origin main

syms N_f N_m W_f W_m
rho_n = 4.55;
rho_w = 2.27;
alpha_n = 0.03333;
alpha_w = 0.06666;
beta_n = 2.61258*10^-3;
beta_w = 3.12792*10^-3;
f = 0.5;
q=0.5;


% Define the system of equations
dN_f_dt = rho_n * f * N_f * (N_m/(N_m+W_m)) - alpha_n*N_f - beta_n *N_f*(N_f+N_m+W_f+W_m);
dN_m_dt = rho_n * (1-f) * N_f * (N_m/(N_m+W_m)) - alpha_n*N_m - beta_n * N_m * (N_f+N_m+W_f+W_m);
dW_f_dt = rho_w * q *W_f - alpha_w*W_f -beta_w*W_f *(N_f+N_m+W_f+W_m);
dW_m_dt = rho_w * (1-q) *W_f - alpha_w*W_m -beta_w*W_m *(N_f+N_m+W_f+W_m);


% Step 1: Solve for equilibria
[eq_N_f, eq_N_m, eq_W_f, eq_W_m] = solve([dN_f_dt == 0, dN_m_dt == 0, dW_f_dt == 0 ,dW_m_dt ==0], [N_f,N_m, W_f, W_m], 'Real', true);


disp([eq_N_f, eq_N_m, eq_W_f, eq_W_m])


%phase plane
%vector field components
%u and v are for non infected female and male respectively
%z and r are for infected female and male resptively
[nf_vals, nm_vals] = meshgrid(linspace(-10, 2500, 25)), linspace(-10, 2500, 25);
[wf_vals, wm_vals] = meshgrid(linspace(-10, 2500, 25)), linspace(-10, 2500, 25);
u = (rho_n * f .* nf_vals) .* (nm_vals ./(nm_vals+wm_vals)) - alpha_n .*nf_vals - beta_n .*nf_vals .*(nf_vals+nm_vals+wf_vals+wm_vals);
v = (rho_n * (1-f) .* nf_vals) .* (nm_vals ./(nm_vals+wm_vals)) - alpha_n .*nm_vals - beta_n .* nm_vals .* (nf_vals+nm_vals+wf_vals+wm_vals);
z = rho_w * q .*wf_vals - alpha_w .*wf_vals -beta_w .*wf_vals .*(nf_vals+nm_vals+wf_vals+wm_vals);
r = rho_w * (1-q) .*wf_vals - alpha_w .*wm_vals -beta_w .*wm_vals .*(nf_vals+nm_vals+wf_vals+wm_vals);


%normalizing vectors
N1 = sqrt(u.^2 + v.^2);
u = u ./ N1;
v = v ./ N1;


N2 = sqrt(z.^2 + r.^2);
z = z ./ N2;
r = r ./ N2;


%wild female vs male
figure;
quiver(nf_vals, nm_vals, u, v, 0.5, 'Color', [0.6 0.6 0.6]);
hold on;


ics = [1000  1000 100 100; 1500 2000 150 200; 2000 1500 200 150];
colors = {'m', 'g', 'b', 'k'};
tspan = [0 200];


system_ode = @(t,Y)[
   (rho_n * f * Y(1))*(Y(2)/(Y(2) + Y(4))) - alpha_n * Y(1) - beta_n * Y(1) *(Y(1) + Y(2) + Y(3) + Y(4));
   (rho_n * (1-f) * Y(1))*(Y(2)/(Y(2) + Y(4))) - alpha_n * Y(2) - beta_n * Y(2) *(Y(1) + Y(2) + Y(3) + Y(4));
   (rho_w * q * Y(3)) - alpha_w * Y(3) - beta_w * Y(3) *(Y(1) + Y(2) + Y(3) + Y(4));
   (rho_w * (1-q) * Y(3)) - alpha_w * Y(4) - beta_w * Y(4) *(Y(1) + Y(2) + Y(3) + Y(4))];


for i = 1:length(ics)-1
   [~, Y] = ode45(system_ode, tspan, ics(i, :)');
   plot(Y(:,1), Y(:,2), 'Color', colors{i}, 'LineWidth', 2);
   plot(ics(i,1), ics(i,2), '*', 'Color', colors{i}, 'MarkerSize', 10);
end


plot(eq_N_f(4), eq_N_m(4), 'ro', 'MarkerSize', 8, 'MarkerFaceColor', 'r');
plot(eq_N_f(5), eq_N_m(6), 'ro', 'MarkerSize', 8, 'MarkerFaceColor', 'y');
plot(eq_N_f(1), eq_N_m(1), 'ro', 'MarkerSize', 8, 'MarkerFaceColor', 'c');
%plot(eq_N_f, eq_N_m, 'ro', 'MarkerSize', 4, 'MarkerFaceColor', 'r')


%ics = [1000  1000 100 100; 1500 2000 150 200; 2000 150 200 15];
% Labels and formatting
xlabel('Noninfected Wild Female Mosquitoes', 'Interpreter', 'latex', 'FontSize', 10);
ylabel('Noninfected Wild Male Mosquitoes', 'Interpreter', 'latex', 'FontSize', 10);
title('Phase Plane for Wild Mosquitoes', 'FontSize', 14);
legend('','','(1000,1000,100,100)','','(1500,2000,150,200)','','(2000,1500,200,150)','Uninfected Dominate','\it{Wolbachia} Dominate','Coexistence')
axis([-10 2000 -10 2000])
axis square;
grid on;
